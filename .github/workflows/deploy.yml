name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 (ARM64)
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: SPRING_PROFILES_ACTIVE=dev ./gradlew build --build-cache -x test

      - name: Set up QEMU (for ARM64 support)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to docker hub
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and push docker image
      - name: Docker image build and push (ARM64)
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/inveed:latest \
            --push .

  # Executes after build if request is pushing to main branch
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:

      # Get into server and start docker compose
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SSH_HOST }}
          username: ${{ secrets.REMOTE_SSH_USERNAME }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            cd /home/${{ secrets.REMOTE_SSH_USERNAME }}/Projects
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -af